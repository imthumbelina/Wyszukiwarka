Jump to content Google Sign in options Remember me This is not recommended for shared computers Sign in anonymously Don't add me to the active users list Privacy Policy      Sign In    Create Account 6 Search Advanced Search section: Google This category This database Forums Members Help Files Developer Journals Gallery Calendar Downloads Resources Store Classifieds Tracker Links Home For Beginners Articles All Articles Post an Article Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile Development APIs and Tools Creative Game Design Music and Sound Visual Arts Business Breaking into the Industry Production and Management Interviews Business and Law Event Coverage Forums All Forums Community Interaction GDNet Lounge Coding Horrors Article Writing GDNet Comments, Suggestions and Ideas Your Announcements Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile & Console Development Build Systems & Source Control APIs and Tools Creative Game Design Writing For Games Music and Sound Visual Arts Gallery Business Breaking into the Industry Business & Law Production & Management Community Developer Journals Screenshot Showdown GDNet+ Subscriptions Gallery Books Store Top Members Classifieds Job Offers Contractors For Hire Contract Projects Hobbyist Projects Marketplace Home » Articles » Technical » OpenGL Watched Content New Content Banner advertising on our site currently available from just $5! 1. Learn about the promo. 2. Sign up for GDNet+. 3. Set up your advert! OpenGL Articles Article Listing Categories (See All) Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile Development APIs and Tools Creative Game Design Music and Sound Visual Arts Business Event Coverage Breaking Into the Industry Business and Law Interviews Production and Management Gamedev.net Help Recent Resources Improve Player Retention Reacting to Behavior [Server Scripts] May 12 2015 04:22 PM | 6 Comments Dynamic vertex pulling with D3D11 Apr 29 2015 11:37 AM | 5 Comments Giving Away $17,000 Worth of Toto Temple Deluxe at Pax East Apr 27 2015 07:27 AM | 2 Comments Everything You Ever Wanted to Know About Authenticode Signing May 08 2015 11:06 AM | 5 Comments Shader Cross Compilation and Savvy - The Smart Shader Cross Compiler May 15 2015 09:23 AM | 0 Comments Crowdin: Localizing Without Pain Apr 15 2015 11:07 AM | 1 Comments Automated Deployment of Your Game Apr 13 2015 10:47 AM | 3 Comments Show more » | View all recent resources» Persistent Mapped Buffers in OpenGL Published in OpenGL By Bartlomiej Filipek - OpenGL (since version 4.4) gives us a new technique to efficiently move data from CPU to GPU. It's called persistent mapped buffers that comes... OpenGL Batch Rendering Published in OpenGL By Marek Krzeminski - You should render as many vertices as possible in a single draw call for optimal performance. In this article I demonstrate how I implemented a ba... OpenGL 3.3+ Tutorials Published in OpenGL By Michal Bubnar - OpenGL 3.3+ Tutorials from the very basics to more advanced concepts. The minimum version of OpenGL used is 3.3, where all of the deprecated stuff... View Complete Archive You cannot add articles Next Page » Like 10Likes Dislike Persistent Mapped Buffers in OpenGL Feb 13 2015 09:04 AM | Posted By Bartlomiej Filipek in OpenGL OpenGL (since version 4.4) gives us a new technique to efficiently move data from CPU to GPU. It's called persistent mapped buffers that comes from the ARB_buffer_storage extension. Tagged With:  opengl  gpu  memory  performance  Read More » | 3 Comments Like 12Likes Dislike OpenGL Batch Rendering Nov 23 2014 12:45 AM | Posted By Marek Krzeminski in OpenGL You should render as many vertices as possible in a single draw call for optimal performance. In this article I demonstrate how I implemented a batch rendering technique for OpenGL using C++. Tagged With:  batch  render  opengl  degenerate  vbo  triangle strips  batching  rendering  manager  Read More » | 12 Comments Like 30Likes Dislike OpenGL 3.3+ Tutorials Jul 27 2014 09:56 AM | Posted By Michal Bubnar in OpenGL mbsoftworks.sk — OpenGL 3.3+ Tutorials from the very basics to more advanced concepts. The minimum version of OpenGL used is 3.3, where all of the deprecated stuff has been removed, so the knowledge you learn is forward compatible Tagged With:  OpenGL  Tutorials  Shaders  GPU  Read More » | 11 Comments Like 3Likes Dislike Concentration of all The Lessons in Common Library GLSummary in MFC UNDER REVIEW Oct 02 2013 12:11 PM | Posted By Petrov Vladimir in OpenGL All NeHe's OpenGL Lessons integrated in one project in Visual C++ MFC. Tagged With:  nehe  opengl  visual c++  mfc  Read More » | 2 Comments Like 26Likes Dislike OpenGL Instancing Demystified Aug 08 2013 09:20 AM | Posted By Martin Thomas in OpenGL This article is about basic OpenGL instancing. It intends to provide you with proper knowledge about instancing, so that next time when you do a project, you do take advantage of it. Tagged With:  ogl  opengl  instancing  Read More » | 11 Comments Like 2Likes Dislike GLSL 4.0: Discarding Fragments to Create a Perforated Look Feb 06 2012 08:41 PM | Posted By David Wolff in OpenGL Fragment shaders can make use of the discard keyword to "throw away" fragments. Use of this keyword causes the fragment shader to stop execution, without writing anything (including depth) to the output buffer. This provides a way to create holes in polygons without using blending. In fact, since fragments are completely discarded, there is no dependence on the order in which objects ar... Tagged With:  vec3  fragment  position  texture  shading  shader  uniform  using  function  Read More » | 1 Comments Like 4Likes Dislike GLSL 4.0: Using Subroutines to Select Shader Functionality Feb 02 2012 08:38 PM | Posted By David Wolff in OpenGL In GLSL, a subroutine is a mechanism for binding a function call to one of a set of possible function definitions based on the value of a variable. Subroutines therefore provide a way to select alternate implementations at runtime without swapping shader programs and/or recompiling, or using if statements along with a uniform variable.In this article by David Wolff, author of OpenGL 4.0 Shading... Tagged With:  subroutine  uniform  function  vec3  shader  shading  position  opengl  variable  Read More » | 1 Comments Like 11Likes Dislike The Basics of GLSL 4.0 Shaders Jan 27 2012 02:44 AM | Posted By David Wolff in OpenGL Shaders give us the power to implement alternative rendering algorithms and a greater degree of flexibility in the implementation of those techniques. With shaders, we can run custom code directly on the GPU, providing us with the opportunity to leverage the high degree of parallelism available with modern GPUs.This article by David Wolff, author of OpenGL 4.0 Shading Language Cookbook, provide... Tagged With:  light  vertex  vec3  shader  diffuse  shading  position  surface  normal  Read More » | 2 Comments Like 3Likes Dislike OpenGL 4.0: Using Uniform Blocks and Uniform Buffer Objects Jan 27 2012 02:39 AM | Posted By David Wolff in OpenGL If your OpenGL/GLSL program involves multiple shader programs that use the same uniform variables, one has to manage the variables separately for each program. Uniform blocks were designed to ease the sharing of uniform data between programs. In this article by David Wolff, author of OpenGL 4.0 Shading Language Cookbook, we will create a buffer object for storing the values of all the uniform v... Tagged With:  uniform  block  buffer  data  object  layout  variable  program  innercolor  Read More » | 1 Comments Like 1Likes Dislike OpenGL Frame Buffer Object 201 Dec 13 2006 06:07 PM | Posted By Rob “phantom” Jones in OpenGL IntroductionIn the last OpenGL Framebuffer object article we covered the basic usage of an FBO for rendering to a single texture and then applying that texture some where else. However this isn’t allthe FBO extension can do; indeed one of the integrated features of this extension which was touched upon briefly in the last article was that of attachment points.In this article we’ll go a little... Tagged With:  fbo  render  buffers  example  texture  textures  first  colour  opengl  Read More » | 0 Comments Like 4Likes Dislike OpenGL Texture Mapping: An Introduction Feb 29 2000 11:34 AM | Posted By Nate Miller in OpenGL This article will cover the basics of texture mapping in OpenGL. This includes the uploading of the texture to the video memory and the application of the texture onto geometry. This article will not cover the actual loading of the texture data itself. That is left up to the reader. If you have prior experience in OpenGL texture mapping I suggest that you pass on reading this article unless you... Tagged With:  texture  opengl  call  data  uploaded  mapping  memory  image  video  Read More » | 851 Comments Next Page » Home » Home » Articles » Technical » OpenGL English (USA) English (USA) English (USA) (COPY) Mark Community Read Forums Members Developer Journals Gallery Downloads Resources Store Classifieds Tracker Links Mark all as read Help PARTNERS Copyright © 1999-2015 GameDev.Net LLC GameDev.net™, the GameDev.net logo, and GDNet™ are trademarks of GameDev.net, LLC Navigation Home For Beginners Technical Creative Business Customer Service GDNet+ Subscriptions Job Advertising Terms of Service Privacy Policy Company Info About Us Advertise on Gamedev.net Contact Us Sign In   Use Google   Use Facebook   Use Twitter Need an account? Register now! Username Password I've forgotten my password Remember me This is not recommended for shared computers Sign in anonymously Don't add me to the active users list Privacy Policy