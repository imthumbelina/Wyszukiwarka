Jump to content Google Sign in options Remember me This is not recommended for shared computers Sign in anonymously Don't add me to the active users list Privacy Policy      Sign In    Create Account 6 Search Advanced Search section: Google This category This database Forums Members Help Files Developer Journals Gallery Calendar Downloads Resources Store Classifieds Tracker Links Home For Beginners Articles All Articles Post an Article Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile Development APIs and Tools Creative Game Design Music and Sound Visual Arts Business Breaking into the Industry Production and Management Interviews Business and Law Event Coverage Forums All Forums Community Interaction GDNet Lounge Coding Horrors Article Writing GDNet Comments, Suggestions and Ideas Your Announcements Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile & Console Development Build Systems & Source Control APIs and Tools Creative Game Design Writing For Games Music and Sound Visual Arts Gallery Business Breaking into the Industry Business & Law Production & Management Community Developer Journals Screenshot Showdown GDNet+ Subscriptions Gallery Books Store Top Members Classifieds Job Offers Contractors For Hire Contract Projects Hobbyist Projects Marketplace Home » Articles » Technical » Graphics Programming and Theory Watched Content New Content Banner advertising on our site currently available from just $5! 1. Learn about the promo. 2. Sign up for GDNet+. 3. Set up your advert! Graphics Programming and Theory Articles Article Listing Categories (See All) Technical Game Programming General Programming Graphics Programming and Theory DirectX and XNA OpenGL Multiplayer and Network Programming Artificial Intelligence Math and Physics Mobile Development APIs and Tools Creative Game Design Music and Sound Visual Arts Business Event Coverage Breaking Into the Industry Business and Law Interviews Production and Management Gamedev.net Help Recent Resources Improve Player Retention Reacting to Behavior [Server Scripts] May 12 2015 04:22 PM | 6 Comments Dynamic vertex pulling with D3D11 Apr 29 2015 11:37 AM | 5 Comments Giving Away $17,000 Worth of Toto Temple Deluxe at Pax East Apr 27 2015 07:27 AM | 2 Comments Everything You Ever Wanted to Know About Authenticode Signing May 08 2015 11:06 AM | 5 Comments Shader Cross Compilation and Savvy - The Smart Shader Cross Compiler May 15 2015 09:23 AM | 0 Comments Crowdin: Localizing Without Pain Apr 15 2015 11:07 AM | 1 Comments Automated Deployment of Your Game Apr 13 2015 10:47 AM | 3 Comments Show more » | View all recent resources» Dynamic vertex pulling with D3D11 Published in Graphics Programming and Theory By Kirill Bazhenov - This article covers a method that allows you to render millions of unique objects with Direct3D11 or OpenGL 4+ with minimal CPU overhead. Rendering... Skeletal Animation Optimization Tips and Tricks Published in Graphics Programming and Theory By Peyman Massoudi - Skeletal animation plays an important role in gaming industry. There are many techniques which can be used to optimize skeletal animations to make... Let There Be Shadow! Published in Graphics Programming and Theory By Joey Fladderak - In this article I will explain how you can get shadows in your own custom vertex/fragment shader in Unity3D. View Complete Archive You cannot add articles Next Page » Like 10Likes Dislike Dynamic vertex pulling with D3D11 Apr 30 2015 01:14 AM | Posted By Kirill Bazhenov in Graphics Programming and Theory This article covers a method that allows you to render millions of unique objects with Direct3D11 or OpenGL 4+ with minimal CPU overhead. Rendering objects this way is very close to DX12/Mantle/Vulkan performance. Tagged With:  d3d11  azdo  next-gen  Read More » | 5 Comments Like 10Likes Dislike Skeletal Animation Optimization Tips and Tricks UNDER REVIEW Feb 20 2015 01:28 PM | Posted By Peyman Massoudi in Graphics Programming and Theory Skeletal animation plays an important role in gaming industry. There are many techniques which can be used to optimize skeletal animations to make them run more efficiently in real-time scenes. This article tends to address some of these techniques in two levels. Implementation level and usage level. Tagged With:  Animation  Character Animation  Optimization  Skeletal Animation  Read More » | 14 Comments Like 10Likes Dislike Let There Be Shadow! Oct 21 2014 03:34 AM | Posted By Joey Fladderak in Graphics Programming and Theory In this article I will explain how you can get shadows in your own custom vertex/fragment shader in Unity3D. Tagged With:  unity3d  shaders  cg  shadows  Read More » | 6 Comments Like 19Likes Dislike Real Time Cloth Simulation with B-spline Surfaces Sep 17 2014 09:38 AM | Posted By Bojan Lovrovic in Graphics Programming and Theory From numerical analysis to hardware tessellation this article presents my approach on creating detailed cloth simulation in real time. For complete understanding of the text presented readers should be familiar on how B-splines work. This is not a requirement for implementation since you can simply copy paste functions that do all the B-spline related stuff. Some knowledge in HLSL and DirectX11... Tagged With:  directx11  b-spline  cloth simulation  math  mathematics  c++  Read More » | 1 Comments Like 12Likes Dislike Overview of Modern Volume Rendering Techniques for Games - Part 2 Aug 21 2014 06:40 AM | Posted By Stoyan Nikolov in Graphics Programming and Theory In this second post from our multi-post series on volume rendering for games, I’ll explain the technical basics that most solutions share. Through all the series I’ll concentrate on ‘realistic’, smooth rendering – not the ‘blocky’ one you can see in games like Minecraft. Tagged With:  voxel  Read More » | 8 Comments Like 12Likes Dislike Designing Parametric Animation Systems Jul 30 2014 03:55 PM | Posted By Peyman Massoudi in Graphics Programming and Theory This article tends to show how a parametric animation system can be created and be used by other modules. In this article, Unity Mecanim animation system is used to create a parametric animation system. Tagged With:  character animation  3d animation  parametric animation  locomotion  animation state machine  mecanim  unity mecanim  unity  animation programming  animation blend tree  Read More » | 0 Comments Like 15Likes Dislike Flexible particle system - The Container Jun 23 2014 11:49 PM | Posted By Bartlomiej Filipek in Graphics Programming and Theory One of the most crucial part of a particle system is the container for all particles. It has to hold all the data that describe particles, it should be easy to extend and fast enough. In this post I will write about choices, problems and possible solutions for such a container. Tagged With:  cpp  particles  animation  optimization  simd  Read More » | 17 Comments Like 17Likes Dislike Polygon Triangulation Jun 06 2014 11:38 PM | Posted By Daniel Taylor in Graphics Programming and Theory Have YOU ever felt a burning desire to decompose arbitrary polygons into triangles? Well now you can! Tagged With:  math  triangulation  algorithm  Read More » | 7 Comments Like 12Likes Dislike A Blending Animation Controller for a Skinned Mesh Mar 24 2014 06:52 AM | Posted By Bruce J. Veazie in Graphics Programming and Theory Animating a skinned mesh requires a method to put the character in motion on-screen. This article discusses a concept and a practical implementation of an animation controller for a skinned mesh. Tagged With:  animation controller  skinned mesh  Read More » | 6 Comments Like 6Likes Dislike Perspective projections in LH and RH systems Mar 24 2014 06:49 AM | Posted By Martin Prantl in Graphics Programming and Theory As you may know, DirectX uses by default left-handed coordinate system (LH) and OpenGL uses right-handed system (RH). RH system has become some kind of a standard in a computer graphic. However, for my personal purposes, LH system seems more logical to visualise. In this article I summarize differences in matrices and also differences in both APIs (DirectX and OpenGL) Tagged With:  projection  directx  dx  ogl  opengl  Read More » | 17 Comments Like 16Likes Dislike 5 Bone Fully Rigged Humanoid Character Mar 04 2014 02:09 PM | Posted By Andreas N. Grontved in Graphics Programming and Theory A short article on how to severely optimize the human skeleton and boil it down to a bare minimum of only 5 skeletal bones. Tagged With:  rigging  optimization  skinning  Read More » | 11 Comments Like 14Likes Dislike How to Work with FBX SDK Mar 03 2014 12:01 PM | Posted By Tianyu Lang in Graphics Programming and Theory This article introduces you to FBXSDK and teaches you how to export FBX model/animation to your own format Tagged With:  how to  fbx  autodesk  sdk  graphics  animation  model  mesh  exporter  Read More » | 49 Comments Like 14Likes Dislike Skinned Mesh Animation Using Matrices Feb 26 2014 02:33 AM | Posted By Bruce J. Veazie in Graphics Programming and Theory Games often use animated characters which walk, run, shoot, etc. Those animated characters are often rendered using an animated skinned mesh. Animating such a mesh can be implemented using arrays of matrices. Tagged With:  animation  matrix  skinned mesh  Read More » | 14 Comments Like 8Likes Dislike Fast GUI Rendering using Texture2DArray Feb 25 2014 04:33 PM | Posted By Kristoffer Lindström in Graphics Programming and Theory This is my rendering approach to creating a custom GUI library that would support my needs of being fast, easy to work with and having a rendering system that merged well with general drawing of low vertex count objects. Tagged With:  gui  ui  immediate  fast  directx  texture2darray  font  text  rendering  realtime  Read More » | 11 Comments Like 21Likes Dislike Improving a Sprite-Based Rendering Procedure Feb 16 2014 06:54 PM | Posted By Julien Jorge in Graphics Programming and Theory So you are developing a 2D game and, suddenly, you discover that the rendering procedure is too slow. What would you do? Would you put less elements in your levels or would you render them more efficiently? Since you are here, I suppose that you would pick the latter. So, here we go, I am going to tell you how to render less things while having more. Tagged With:  optimization  sprites  largest empty rectangle  rendering  2d  Read More » | 9 Comments Like 22Likes Dislike The Total Beginner's Guide to 3D Graphics Theory Nov 22 2013 02:23 AM | Posted By Tim Bright in Graphics Programming and Theory Interested in how 3D graphics work, but don't know anything about the basic theory? Here's a good place to start learning about the mystery of 3D graphics. Tagged With:  graphics theory  Read More » | 8 Comments Like 19Likes Dislike Overview of Modern Volume Rendering Techniques for Games - Part 1 Oct 25 2013 09:29 PM | Posted By Stoyan Nikolov in Graphics Programming and Theory In these series I’ll explain the details of some of the algorithms as well as their practical implementations.This first post introduces the concept of volume rendering and what are it’s greatest benefits for games. Tagged With:  voxel  rendering  procedural  Read More » | 5 Comments Like 14Likes Dislike Introduction to the Graphics Pipeline Aug 30 2013 05:25 AM | Posted By Steven De Bock in Graphics Programming and Theory This article is mainly intended to give some introductory background information to the graphics pipeline in a triangle-based rendering scheme and how it maps to the different system components. We'll only cover the parts of the pipeline that are relevant to understaning the rendering of a single triangle with OpenGL. Tagged With:  shaders  opengl  graphics pipeline  Read More » | 7 Comments Like 13Likes Dislike Axonometric Projections - A Technical Overview Aug 16 2013 03:16 AM | Posted By Thiadmer Riemersma in Graphics Programming and Theory This article discusses how axonometric projections may be used in computer graphics, multimedia applications and computer games. It compares the axonometric projection, or parallel perspective, to the linear perspective, lists the major properties and tackles some implementation details. Tagged With:  parallel perspective  linear perspective  axonometric  isometric  dimetric  Read More » | 3 Comments Like 3Likes Dislike 2D Animation Basics Aug 15 2013 02:24 PM | Posted By Paul Rayman in Graphics Programming and Theory A good example of 2D animation is classic cartoons – multiple pictures of Mickey Mouse or Donald Duck alternating over time and producing the effect of moving objects. Modern 2D animation software allows creating animation much easier though, without making oodles of frames. Tagged With:  curve editor  2d animation  Read More » | 1 Comments Like 5Likes Dislike GPGPU image processing basics using OpenCL.NET Aug 15 2013 02:22 PM | Posted By Ilya Suzdalnitski in Graphics Programming and Theory OpenCL is a cross-platform framework used mostly for GPGPU (General-purpose computing on graphics processing units). There are plenty of tutorials available on image processing with OpenCL using C/C++, however there's not much information that would cover OpenCL image processing with .NET.I won't go into details about OpenCL kernels/queues/etc. (there's plenty of information available on the in... Tagged With:  OpenCL  Image Processing  .NET  GPGPU  Read More » | 1 Comments Like 6Likes Dislike HLSL: Greyscale Shader Tutorial Aug 09 2013 01:27 PM | Posted By George Kristiansen in Graphics Programming and Theory This article explains an easy way to convert your colour renderings to an old-style greyscale. Tagged With:  hlsl  greyscale  black and white  shader  tutorial  Read More » | 4 Comments Like 25Likes Dislike A Closer Look At Parallax Occlusion Mapping Aug 09 2013 01:57 AM | Posted By Jason Zink in Graphics Programming and Theory Parallax occlusion mapping is a technique that reduces a geometric model’s complexity by encoding surface detail information in a texture. The surface information that is typically used is a height-map representation of the replaced geometry. When the model is rendered, the surface details are reconstructed in the pixel shader from the height-map texture information. Tagged With:  parallax  occulsion  Read More » | 0 Comments Like 6Likes Dislike Efficient Normal Computations for Terrain Lighting in DirectX 10 Jul 30 2013 01:52 PM | Posted By Jeromy Walsh in Graphics Programming and Theory It is my hope that by the end of this article you will have discovered some efficient and exciting ways to take advantage of current-generation hardware to compute the surface and vertex normals necessary for the complex lighting algorithms which will be popping up with the new generation of rendering hardware Tagged With:  normal  terrain  lighting  dx10  shaders  hlsl  Read More » | 0 Comments Like 53Likes Dislike Advanced Terrain Texture Splatting Jul 17 2013 07:56 PM | Posted By Andrey Mishkinis in Graphics Programming and Theory In this article I will explain a texture splatting algorithm which allows you to create more natural terrain. This algorithm may be used in shaders of 3D games as well as in 2D games. Tagged With:  terrain  splatting  texture  Read More » | 17 Comments Next Page » Home » Home » Articles » Technical » Graphics Programming and Theory English (USA) English (USA) English (USA) (COPY) Mark Community Read Forums Members Developer Journals Gallery Downloads Resources Store Classifieds Tracker Links Mark all as read Help PARTNERS Copyright © 1999-2015 GameDev.Net LLC GameDev.net™, the GameDev.net logo, and GDNet™ are trademarks of GameDev.net, LLC Navigation Home For Beginners Technical Creative Business Customer Service GDNet+ Subscriptions Job Advertising Terms of Service Privacy Policy Company Info About Us Advertise on Gamedev.net Contact Us Sign In   Use Google   Use Facebook   Use Twitter Need an account? Register now! Username Password I've forgotten my password Remember me This is not recommended for shared computers Sign in anonymously Don't add me to the active users list Privacy Policy